// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OnlineCourseRegistration.Persistence.Repositories;

#nullable disable

namespace OnlineCourseRegistration.Persistence.Migrations
{
    [DbContext(typeof(EFContext))]
    [Migration("20221128005851_aaa")]
    partial class aaa
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OnlineCourseRegistration.Domain.StudentAggregateRoot.Entities.Course", b =>
                {
                    b.Property<string>("StudentId")
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("semester")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("session")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CourseId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CampId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FacId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("StudentId", "semester", "session", "CourseId");

                    b.HasIndex("StudentId", "session", "semester");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            StudentId = "1",
                            semester = "1",
                            session = "1",
                            CourseId = "111",
                            CampId = "d",
                            FacId = "s"
                        },
                        new
                        {
                            StudentId = "1",
                            semester = "1",
                            session = "1",
                            CourseId = "113",
                            CampId = "d",
                            FacId = "s"
                        },
                        new
                        {
                            StudentId = "1",
                            semester = "1",
                            session = "1",
                            CourseId = "114",
                            CampId = "d",
                            FacId = "s"
                        });
                });

            modelBuilder.Entity("OnlineCourseRegistration.Domain.StudentAggregateRoot.Entities.CourseRegistrationForm", b =>
                {
                    b.Property<string>("StudentId")
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("session")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("semester")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("maxPossibleTotalUnit")
                        .HasColumnType("int");

                    b.Property<int>("minPossibleTotalUnit")
                        .HasColumnType("int");

                    b.HasKey("StudentId", "session", "semester");

                    b.ToTable("CourseRegistrationForms");

                    b.HasData(
                        new
                        {
                            StudentId = "1",
                            session = "1",
                            semester = "1",
                            maxPossibleTotalUnit = 2,
                            minPossibleTotalUnit = 2
                        },
                        new
                        {
                            StudentId = "1",
                            session = "1",
                            semester = "2",
                            maxPossibleTotalUnit = 2,
                            minPossibleTotalUnit = 2
                        });
                });

            modelBuilder.Entity("OnlineCourseRegistration.Domain.StudentAggregateRoot.Entities.Student", b =>
                {
                    b.Property<string>("StudentId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("StudentId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            StudentId = "1"
                        },
                        new
                        {
                            StudentId = "11"
                        });
                });

            modelBuilder.Entity("OnlineCourseRegistration.Domain.StudentAggregateRoot.Entities.Course", b =>
                {
                    b.HasOne("OnlineCourseRegistration.Domain.StudentAggregateRoot.Entities.CourseRegistrationForm", "CourseRegistrationForm")
                        .WithMany("coursesForm")
                        .HasForeignKey("StudentId", "session", "semester")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CourseRegistrationForm");
                });

            modelBuilder.Entity("OnlineCourseRegistration.Domain.StudentAggregateRoot.Entities.CourseRegistrationForm", b =>
                {
                    b.HasOne("OnlineCourseRegistration.Domain.StudentAggregateRoot.Entities.Student", "student")
                        .WithMany("CourseRegistrationForms")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("student");
                });

            modelBuilder.Entity("OnlineCourseRegistration.Domain.StudentAggregateRoot.Entities.Student", b =>
                {
                    b.OwnsOne("OnlineCourseRegistration.Domain.ValueObjects.StudentName", "Name", b1 =>
                        {
                            b1.Property<string>("StudentId")
                                .HasColumnType("nvarchar(10)");

                            b1.Property<string>("FirstName")
                                .IsRequired()
                                .HasMaxLength(20)
                                .HasColumnType("nvarchar(20)")
                                .HasColumnName("FirstName");

                            b1.Property<string>("LastName")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("StudentId");

                            b1.ToTable("Students");

                            b1.WithOwner()
                                .HasForeignKey("StudentId");

                            b1.HasData(
                                new
                                {
                                    StudentId = "1",
                                    FirstName = "SpaghettO1",
                                    LastName = "Spaghetti1"
                                },
                                new
                                {
                                    StudentId = "11",
                                    FirstName = "Spaghett11",
                                    LastName = "Spaghetti11"
                                });
                        });

                    b.Navigation("Name")
                        .IsRequired();
                });

            modelBuilder.Entity("OnlineCourseRegistration.Domain.StudentAggregateRoot.Entities.CourseRegistrationForm", b =>
                {
                    b.Navigation("coursesForm");
                });

            modelBuilder.Entity("OnlineCourseRegistration.Domain.StudentAggregateRoot.Entities.Student", b =>
                {
                    b.Navigation("CourseRegistrationForms");
                });
#pragma warning restore 612, 618
        }
    }
}
